<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://helloxxb.github.io/</id>
    <title>Peter's Blog Blog</title>
    <updated>2022-08-08T12:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://helloxxb.github.io/"/>
    <subtitle>Peter's Blog Blog</subtitle>
    <icon>https://helloxxb.github.io/img/favicons/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[PHP知识点整理]]></title>
        <id>/2022/08/08/questions</id>
        <link href="https://helloxxb.github.io/2022/08/08/questions"/>
        <updated>2022-08-08T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[1. 如何避免 PHP 精度计算问题？]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_mojV" id="1-如何避免-php-精度计算问题">1. 如何避免 PHP 精度计算问题？<a class="hash-link" href="#1-如何避免-php-精度计算问题" title="标题的直接链接">​</a></h3><ul><li>采用BC 数学函数（bcadd、bcdiv、bcmul）。</li><li>乘以指定的倍数转换为整数，再进行计算。</li><li>计算时将浮点型全部转为整数来计算，显示的地方可以设置为字符串类型。</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="2-jsonp-的实现原理是什么">2. JSONP 的实现原理是什么？<a class="hash-link" href="#2-jsonp-的实现原理是什么" title="标题的直接链接">​</a></h3><p>JSONP 是一种跨域通信的手段。类似于 JSON <code>函数名({"data":"message"})</code>。
因为浏览器的同源策略，浏览器从 A 网站向 B 网站请求资源，必须同时满足：
协议相同、域名相同、端口相同，任何一点不同都会产生跨域，产生跨域后，浏览器就会阻止数据返回。
JSONP 利用了 <code>&lt;script src=""&gt;</code> 标签可以链接到不同源的 JS 脚本文件，来到达跨域目的。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="3-静态资源为什么要使用-cdn-服务">3. 静态资源为什么要使用 CDN 服务？<a class="hash-link" href="#3-静态资源为什么要使用-cdn-服务" title="标题的直接链接">​</a></h3><p>CDN 叫做(Content Delivery Networks，通常用于分发静态资源)。
现在的网站、APP存在大量的静态资源，比如高清图片、视频、CSS 样式文件，这些文件通常不会经常更改，
利用 CDN 将资源复制到分布在世界各地的边缘节点网络，当用户请求 CDN 承载的资源时，它们被路由到离你最近的节点。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="4-了解-jwt-吗">4. 了解 JWT 吗？<a class="hash-link" href="#4-了解-jwt-吗" title="标题的直接链接">​</a></h3><p>JWT 叫做(JSON Web Token)，是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准，适用于分布式站点的单点登录（SSO）场景。
JWT 由三部分组成，它们之间用圆点连接: <code>Header、Payload、Signature</code>。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="5-保持用户会话为什么要使用-cookie是否有代替方案如何解决-session-共享问题">5. 保持用户会话为什么要使用 cookie？是否有代替方案？如何解决 session 共享问题？<a class="hash-link" href="#5-保持用户会话为什么要使用-cookie是否有代替方案如何解决-session-共享问题" title="标题的直接链接">​</a></h3><p><a href="https://blog.csdn.net/Dragon_yjl/article/details/120346817" target="_blank" rel="noopener noreferrer">参考文</a></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="6-了解-swoole-吗">6. 了解 swoole 吗？<a class="hash-link" href="#6-了解-swoole-吗" title="标题的直接链接">​</a></h3><p>Swoole 是一个使用 C++ 语言编写的基于异步事件驱动和协程的并行网络通信引擎，为 PHP 提供协程、高性能网络编程支持。提供了多种通信协议的网络服务器和客户端模块，可以方便快速的实现 TCP/UDP服务、高性能Web、WebSocket服务、物联网、实时通讯、游戏、微服务等，使 PHP 不再局限于传统的 Web 领域。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="7-了解-docker-吗">7. 了解 docker 吗？<a class="hash-link" href="#7-了解-docker-吗" title="标题的直接链接">​</a></h3><p>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。
Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。
容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="8-使用过哪些-rpc-协议">8. 使用过哪些 RPC 协议？<a class="hash-link" href="#8-使用过哪些-rpc-协议" title="标题的直接链接">​</a></h3><p>RPC 叫做(Remote Procedure Call 远程过程调用)，是一种技术思想而非一种规范或协议。
相比于 HTTP 协议，RPC 采用二进制字节码传输，因此更加高效和安全。</p><ul><li>JSON RPC 服务，是一种基于 JSON 格式的轻量级的 RPC 协议标准，易于使用和阅读。</li><li>gRPC 服务，Java实现的底层网络库是基于Netty开发而来，其Go实现是基于net库。</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="9-mysql-查询优化举例">9. MySQL 查询优化举例<a class="hash-link" href="#9-mysql-查询优化举例" title="标题的直接链接">​</a></h3><p><a href="https://blog.csdn.net/weixin_51689029/article/details/125316797" target="_blank" rel="noopener noreferrer">参考文档</a></p><ul><li>避免全表扫描，在 WHERE 和 ORDER BY 涉及到的列上建立索引。</li><li>避免在 WHERE 子句中使用 <code>!= 和 &lt;&gt;</code>，否则将放弃索引而进行全表扫描。</li><li>避免在 WHERE 子句中对字段进行 NULL 值判断，建议设置默认值。</li><li>避免在 WHERE 子句中使用 OR 来连接条件。</li><li>避免使用 IN 和 NOT IN，对于连续的数值可以采用 BETWEEN。</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="10-说一下缓存的优点高并发访问下如何正确使用缓存">10. 说一下缓存的优点，高并发访问下如何正确使用缓存？<a class="hash-link" href="#10-说一下缓存的优点高并发访问下如何正确使用缓存" title="标题的直接链接">​</a></h3><p><a href="https://www.jianshu.com/p/20acc610fb92" target="_blank" rel="noopener noreferrer">参考文档</a></p><p><strong>缓存优点：</strong></p><ul><li>提高性能：缓存查询速度比数据库查询速度快。</li><li>提高并发能力：缓存分担了部分请求，支持更高的并发。</li></ul><p><strong>高并发下的使用方法：</strong></p><ul><li>在缓存的过期时间加上一个随机值，避免缓存在同一时间过期。</li><li>使用 Redis 集群；Redis 持久化。</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="11-使用过哪些队列服务用在什么场景遇到过什么问题">11. 使用过哪些队列服务，用在什么场景？遇到过什么问题？<a class="hash-link" href="#11-使用过哪些队列服务用在什么场景遇到过什么问题" title="标题的直接链接">​</a></h3><p>常见消息队列服务：RabbitMQ、ActiveMQ、RocketMQ、Kafka
使用场景：商品秒杀、系统解耦(功能订阅/取消订阅)、日志记录</p>]]></content>
        <category label="interview" term="interview"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用WebHooks实现代码自动拉取]]></title>
        <id>/2022/02/13/git-hooks-auto-pull</id>
        <link href="https://helloxxb.github.io/2022/02/13/git-hooks-auto-pull"/>
        <updated>2022-02-13T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[其原理是利用 GitLab/GitHub/YourRepository 提供的 WebHooks 钩子事件，创建一个钩子并且监听开发者的 push事件，接收到push事件后会通过POST请求将事件信息推送到指定的URL。当自行搭建的Nginx服务器接收到这个请求后，转发到自己写的 PHP脚本，PHP脚本会做一些基础校验（例如：访问令牌、密码），然后执行提前写好的 Shell 脚本来拉取代码。]]></summary>
        <content type="html"><![CDATA[<p>其原理是利用 <code>GitLab/GitHub/YourRepository</code> 提供的 <code>WebHooks 钩子事件</code>，创建一个钩子并且监听开发者的 <code>push事件</code>，接收到push事件后会通过POST请求将事件信息推送到指定的URL。当自行搭建的Nginx服务器接收到这个请求后，转发到自己写的 <code>PHP脚本</code>，PHP脚本会做一些基础校验（例如：访问令牌、密码），然后执行提前写好的 <code>Shell </code>脚本来拉取代码。</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="准备工作">准备工作<a class="hash-link" href="#准备工作" title="标题的直接链接">​</a></h3><blockquote><p>需要 <code>Nginx + PHP 7.* + Swoole 扩展</code> 的环境支持</p></blockquote><h4 class="anchor anchorWithStickyNavbar_mojV" id="添加钩子说明">添加钩子说明：<a class="hash-link" href="#添加钩子说明" title="标题的直接链接">​</a></h4><p>需要填写【URL（key 用于区分项目）、Secret Token、Trigger】</p><p><strong>URL填写：</strong>
<code>http://test.local.com/gitlab_webhooks?key=c40d160c2ffa013b</code>
<strong>Secret Token填写：</strong>1234567890
<strong>Trigger填写：</strong>仅勾选 Push events 即可</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">假设项目目录为：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/home/wwwroot/test.local.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/home/shells/git_pull.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Nginx配置文件：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/local/nginx/conf/vhosts/test.local.com.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">访问项目网址为：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">http://test.local.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">也可直接省略 Nginx 服务，直接采用 Swolle 监听 HTTP服务。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">案例因为使用的是 Docker 容器，项目在容器内。并且只开放了80端口，所以需要 Nginx 做一次转发工作。</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="1-修改配置文件增加代理转发">1. 修改配置文件，增加代理转发<a class="hash-link" href="#1-修改配置文件增加代理转发" title="标题的直接链接">​</a></h3><p><code>以下几步操作都需要进入到 linux 服务器里面进行操作</code></p><div class="language-nginx codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-nginx codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">vim /usr/local/nginx/conf/vhosts/test.local.com.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># swoole 方式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## GitLab Webhooks 处理推送事件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location ^~ /gitlab_webhooks {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## 此处使用了 ^~ 匹配，所以符合这个条件的，将不再匹配下面的 localtion 段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## 转发到本机 6200 端口的 Swoole 程序处理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  proxy_pass http://127.0.0.1:6200;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## 在这个指令上面增加 代理转发</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location / {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># php-fpm 方式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location ^~ /gitlab_webhooks {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    root /home/wwwroot/gitlab_webhooks;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fastcgi_pass  unix:/tmp/php-cgi.sock;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fastcgi_index index.php;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    include       fastcgi_params;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## 在这个指令上面增加 代理转发</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location / {}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="2-上传处理钩子的代码">2. 上传处理钩子的代码<a class="hash-link" href="#2-上传处理钩子的代码" title="标题的直接链接">​</a></h3><p> <strong>主要的程序文件</strong></p><ul><li><a href="https://gist.github.com/helloxxb/9f6cee5abf0fa98801787b4f28e47a40" target="_blank" rel="noopener noreferrer">WebhooksInterface.php</a></li><li><a href="https://gist.github.com/helloxxb/6270295e556ef98cd01a4942cde07f9b" target="_blank" rel="noopener noreferrer">GitPull.php</a></li><li><a href="https://gist.github.com/helloxxb/91b2750df0f1d43aac56e4d36acdbf04" target="_blank" rel="noopener noreferrer">WebhooksHttpServer.php</a></li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="3-启动-swoole-程序">3. 启动 Swoole 程序<a class="hash-link" href="#3-启动-swoole-程序" title="标题的直接链接">​</a></h3><div class="language-bash codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-bash codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">php /home/wwwroot/gitlab_webhooks/WebhooksHttpServer.php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">此程序监听的是 </span><span class="token number" style="color:#36acaa">127.0</span><span class="token plain">.0.1:6200</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="vcs" term="vcs"/>
        <category label="git-hooks" term="git-hooks"/>
    </entry>
</feed>