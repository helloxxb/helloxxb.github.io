"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[529],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),c=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):u(u({},e),n)),t},p=function(n){var e=c(n.components);return r.createElement(l.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,l=n.parentName,p=a(n,["components","mdxType","originalType","parentName"]),s=c(t),f=o,d=s["".concat(l,".").concat(f)]||s[f]||m[f]||i;return t?r.createElement(d,u(u({ref:e},p),{},{components:t})):r.createElement(d,u({ref:e},p))}));function f(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,u=new Array(i);u[0]=s;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a.mdxType="string"==typeof n?n:o,u[1]=a;for(var c=2;c<i;c++)u[c]=t[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},5126:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return m}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),u=["components"],a={title:"\u5bfb\u627e\u6570\u7ec4\u7684\u4e2d\u5fc3\u4e0b\u6807",date:"2022-02-26 16:00:00 +0800",tags:["php-algorithm"]},l=void 0,c={unversionedId:"Algorithm/find-pivot-index",id:"Algorithm/find-pivot-index",title:"\u5bfb\u627e\u6570\u7ec4\u7684\u4e2d\u5fc3\u4e0b\u6807",description:"\u529b\u6263\u9898\u5e93-724",source:"@site/docs/Algorithm/03-find-pivot-index.md",sourceDirName:"Algorithm",slug:"/Algorithm/find-pivot-index",permalink:"/docs/Algorithm/find-pivot-index",draft:!1,tags:[{label:"php-algorithm",permalink:"/docs/tags/php-algorithm"}],version:"current",sidebarPosition:3,frontMatter:{title:"\u5bfb\u627e\u6570\u7ec4\u7684\u4e2d\u5fc3\u4e0b\u6807",date:"2022-02-26 16:00:00 +0800",tags:["php-algorithm"]},sidebar:"tutorialSidebar",previous:{title:"\u6590\u6ce2\u90a3\u5951\u6570\u5217",permalink:"/docs/Algorithm/fibonacci"},next:{title:"\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32",permalink:"/docs/Algorithm/is-palindrome"}},p={},m=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:3}],s={toc:m};function f(n){var e=n.components,t=(0,o.Z)(n,u);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/find-pivot-index/"},"\u529b\u6263\u9898\u5e93-724"))),(0,i.kt)("h3",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u6570\u7ec4nums\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u80fd\u591f\u8fd4\u56de\u6570\u7ec4\u201c\u4e2d\u5fc3\u7d22\u5f15\u201d\u7684\u65b9\u6cd5\u3002\n\u6211\u4eec\u662f\u8fd9\u6837\u5b9a\u4e49\u6570\u7ec4\u4e2d\u5fc3\u7d22\u5f15\u7684\uff1a\u6570\u7ec4\u4e2d\u5fc3\u7d22\u5f15\u7684\u5de6\u4fa7\u6240\u6709\u5143\u7d20\u76f8\u52a0\u7684\u548c\u7b49\u4e8e\u53f3\u4fa7\u6240\u6709\u5143\u7d20\u76f8\u52a0\u7684\u548c\u3002\n\u5982\u679c\u6570\u7ec4\u4e0d\u5b58\u5728\u4e2d\u5fc3\u7d22\u5f15\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u8fd4\u56de -1\u3002\u5982\u679c\u6570\u7ec4\u6709\u591a\u4e2a\u4e2d\u5fc3\u7d22\u5f15\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u8fd4\u56de\u6700\u9760\u8fd1\u5de6\u8fb9\u7684\u90a3\u4e00\u4e2a\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\u8f93\u5165\uff1anums = [1, 7, 3, 6, 5, 6]\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\n\u4e2d\u5fc3\u4e0b\u6807\u662f 3 \u3002\n\u5de6\u4fa7\u6570\u4e4b\u548c sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11 \uff0c\n\u53f3\u4fa7\u6570\u4e4b\u548c sum = nums[4] + nums[5] = 5 + 6 = 11 \uff0c\u4e8c\u8005\u76f8\u7b49\u3002\n\n\u793a\u4f8b 2:\n\u8f93\u5165\uff1anums = [1, 2, 3]\n\u8f93\u51fa\uff1a-1\n\u89e3\u91ca\uff1a\n\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u4e2d\u5fc3\u4e0b\u6807\u3002\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"function findPivotIndex($nums = []) {\n    $count = count($nums);\n    if ($count == 1) {\n        return -1;\n    }\n    $total   = array_sum($nums);\n    $leftSum = 0; // \u5de6\u8fb9\u4e4b\u548c\n    for ($i = 0; $i < $count; $i++) {\n        // ($total - $nums[$i] - $leftSum) \u5f53\u524d\u7d22\u5f15\u7684\u53f3\u8fb9\u4e4b\u548c\n        if ($leftSum == ($total - $nums[$i] - $leftSum)) {\n            return $i;\n        } else {\n            $leftSum += $nums[$i];\n        }\n    }\n    return -1;\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u9012\u5f52\u65b9\u5f0f\u5b9e\u73b0")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"function findPivotIndex2($index = 0, $nums = []) {\n    $count = count($nums);\n    // \u5143\u7d20\u5c11\u4e8e\u4e00\u4e2a\u6216\u8005\u672a\u627e\u5230\u4e2d\u5fc3\u7d22\u5f15\u8fd4\u56de-1\n    if ($count == 1 || $index >= $count) {\n        return -1;\n    }\n    $leftSum = $rightSum = 0;\n    // \u5047\u8bbe\uff1a\u7b2c\u4e00\u4e2a\u4e2d\u5fc3\u7d22\u5f15\u4e3a0\n    // \u8ba1\u7b97\u5de6\u8fb9\u4e4b\u548c\uff080->$index\uff09\n    for ($i = 0; $i < $index; $i++) {\n        $leftSum += $nums[$i];\n    }\n    // \u53f3\u8fb9\u4e4b\u548c\uff08$index + 1 ->$count\uff09\n    for ($j = $index + 1; $j < $count; $j++) {\n        $rightSum += $nums[$j];\n    }\n    if ($leftSum === $rightSum) {\n        return $index;\n    } else {\n        // \u6ce8\u610f\uff1a\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6\uff0c\u4e00\u5b9a\u8981 return \u9012\u5f52\u51fd\u6570\uff0c\u4e0d\u7136\u65e0\u6cd5\u6b63\u5e38\u8fd4\u56de\u3002\n        return findPivotIndex2($index + 1, $nums);\n    }\n}\n")))}f.isMDXComponent=!0}}]);